import json
from os import path

from selenium import webdriver

from .env import env

def _bogus_duo_url(base_url: str):
    return f"https://{base_url}/frame"

def load_cookies(driver: webdriver):
    """Attempts to load any cookies that we've cached, if they exist"""

    # format filename
    cur_cookiejar = path.join(
        env.cookiejar, f"{env.username}.cookiejar"
    )

    # see if cookiejar exists
    if path.exists(cur_cookiejar):
        
        # open the file
        with open(cur_cookiejar, 'r') as jar:

            # skip any comment lines
            while True:
                pos = jar.tell()
                prefix = jar.read(1)
                if prefix == "#":
                    jar.readline() # skip line
                else:
                    jar.seek(pos)
                    break

            # read domain
            domain = jar.readline().removeprefix("domain=")

            # remove prefix if it's there
            pos = jar.tell()
            prefix = jar.read(8)
            if prefix != "session=":
                jar.seek(pos)
            
            # read session data
            cookies = json.load(jar)
        
        # Open new tab
        driver.execute_script("window.open('');")
        driver.switch_to.window(driver.window_handles[-1])

        # Go to bogus Duo URL
        driver.get(_bogus_duo_url(domain))

        # Load all cookies
        for cookie in cookies:
            driver.add_cookie(cookie)

        # Close Tab
        driver.close()
        driver.switch_to.window(driver.window_handles[0])

        # Print, then we're done
        print(f"Loaded cached cookies from {cur_cookiejar}!")
    
    # If no cookies exist, say so
    else:
        print(f"No cached cookies exist for {env.username}!")


def save_cookies(driver: webdriver, domain: str):
    """Attempts to save any cookies that we've collected"""

    # format filename
    cur_cookiejar = path.join(
        env.cookiejar, f"{env.username}.cookiejar"
    )

    # Open new tab
    driver.execute_script("window.open('');")
    driver.switch_to.window(driver.window_handles[-1])

    # Go to bogus Duo URL
    driver.get(_bogus_duo_url(domain))

    # Open Cookiejar
    with open(cur_cookiejar, 'w') as jar:

        # Write header
        jar.write("# This file was autogenerated by classbot-3.0.\n")
        jar.write("# For your own security, please do not share or modify the contents of this file.\n")
        
        # Write domain info and start session
        jar.write(f"domain={domain}\nsession=")

        # Write cookiejar
        json.dump(driver.get_cookies(), jar)

    # Close Tab
    driver.close()
    driver.switch_to.window(driver.window_handles[0])
    
    # Print message
    print(f"Cached cookies to {cur_cookiejar}!")
